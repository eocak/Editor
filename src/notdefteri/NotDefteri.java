package notdefteri;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class NotDefteri extends javax.swing.JFrame {

    /**
     * Creates new form NotDefteri
     */
    SQLiteFunctions sqlf = new SQLiteFunctions();

    ResultSet rs;
    String textAreaSituation = "";
    int selectedListIndex;
    ArrayList<Not> siraliNotlar; 
    int guncelIndex;

    public NotDefteri() {
        initComponents();

        notlariBaslat();

    }

    public void notlariBaslat() {
        DefaultListModel<String> notBasliklari = new DefaultListModel<>();
        siraliNotlar = new ArrayList();
        rs = sqlf.notlariGetir();

        try {
            while (rs.next()) {

                notBasliklari.addElement(rs.getString("baslik"));

                Not siraliNot = new Not(rs.getInt("id"), rs.getString("baslik"), rs.getString("not"));
                siraliNotlar.add(siraliNot);

            }

            listBaslik.setModel(notBasliklari);
            listBaslik.setSelectedIndex(0);

        } catch (SQLException ex) {
            Logger.getLogger(NotDefteri.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    ;

    
    private void listBaslikValueChanged(javax.swing.event.ListSelectionEvent evt) {                                        
        // TODO add your handling code here:

        if (!evt.getValueIsAdjusting()) {//This line prevents double events

           
            selectedListIndex = listBaslik.getSelectedIndex();

            Not not = siraliNotlar.get(selectedListIndex);

            try {
                
                rs = sqlf.notGetir(not.getDbId());
                txtAreaNot.setText(rs.getString("not"));
                lblTarih.setText("Tarih : " + rs.getString("tarih"));
            } catch (SQLException ex) {
                Logger.getLogger(NotDefteri.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listBaslik = new javax.swing.JList();
        panel2 = new java.awt.Panel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaNot = new javax.swing.JTextArea();
        txtBaslik = new javax.swing.JTextField();
        lblIcon = new javax.swing.JLabel();
        lblTarih = new javax.swing.JLabel();
        btnEkle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" Not Defteri");
        setPreferredSize(new java.awt.Dimension(700, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        listBaslik.setSelectedIndex(1);
        listBaslik.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listBaslikMouseClicked(evt);
            }
        });
        listBaslik.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listBaslikValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listBaslik);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        getContentPane().add(panel1);
        panel1.setBounds(10, 10, 130, 650);

        panel2.setPreferredSize(new java.awt.Dimension(251, 700));

        txtAreaNot.setColumns(20);
        txtAreaNot.setRows(5);
        txtAreaNot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAreaNotFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAreaNotFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtAreaNot);
        txtAreaNot.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {
                // text was changed
                textAreaSituation = "changed";
            }
            public void removeUpdate(DocumentEvent e) {
                // text was deleted
                textAreaSituation = "deleted";
            }
            public void insertUpdate(DocumentEvent e) {
                // text was inserted
                textAreaSituation = "inserted";
            }
        });

        txtBaslik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBaslikActionPerformed(evt);
            }
        });

        lblIcon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIcon.setText("Başlık Ekle:");

        lblTarih.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        btnEkle.setText("Not Ekle");
        btnEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEkleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(txtBaslik, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEkle)
                .addGap(18, 18, 18)
                .addComponent(lblTarih, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 431, Short.MAX_VALUE)))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBaslik, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTarih, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE))
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 621, Short.MAX_VALUE)))
        );

        getContentPane().add(panel2);
        panel2.setBounds(160, 12, 520, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/*
    private void listBaslikValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listBaslikValueChanged
        // TODO add your handling code here:

        if (!evt.getValueIsAdjusting()) {//This line prevents double events

           
            selectedListIndex = listBaslik.getSelectedIndex();

            Not not = siraliNotlar.get(selectedListIndex);

            try {
                
                rs = sqlf.notGetir(not.getDbId());
                txtAreaNot.setText(rs.getString("not"));
                lblTarih.setText("Tarih : " + rs.getString("tarih"));
            } catch (SQLException ex) {
                Logger.getLogger(NotDefteri.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_listBaslikValueChanged
*/
    private void txtAreaNotFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAreaNotFocusGained
        // TODO add your handling code here:
        guncelIndex = selectedListIndex;
        textAreaSituation = "";
    }//GEN-LAST:event_txtAreaNotFocusGained

    private void txtAreaNotFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAreaNotFocusLost
        // TODO add your handling code here:

        if ((textAreaSituation.equals("inserted")) || textAreaSituation.equals("deleted")) {

            Not not = siraliNotlar.get(guncelIndex);

            sqlf.notGuncelle(not.getDbId(), txtAreaNot.getText());
            textAreaSituation = "";

        } else {
            Not not = siraliNotlar.get(selectedListIndex);

            sqlf.notGuncelle(not.getDbId(), txtAreaNot.getText());
        }

    }//GEN-LAST:event_txtAreaNotFocusLost

    private void listBaslikMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBaslikMouseClicked
        // TODO add your handling code here:

        if (evt.getClickCount() == 2) {

            int a = JOptionPane.showConfirmDialog(this, "Silmek istediğinize emin misiniz?", "Not Sil", JOptionPane.YES_NO_OPTION);

            if (a == JOptionPane.YES_OPTION) {
                Not not = siraliNotlar.get(selectedListIndex);
                int b = sqlf.notSil(not.getDbId());

                if (b == 1) {
                    JOptionPane.showMessageDialog(this, "Silme başarılı!", "Not Sil", JOptionPane.INFORMATION_MESSAGE);
                    notlariBaslat();
                } else {
                    JOptionPane.showMessageDialog(this, "Silme başarısız!", "Not Sil", JOptionPane.ERROR_MESSAGE);
                }

            }
        }

    }//GEN-LAST:event_listBaslikMouseClicked

    private void txtBaslikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBaslikActionPerformed
        // TODO add your handling code here:

        txtAreaNot.requestFocusInWindow();

    }//GEN-LAST:event_txtBaslikActionPerformed

    private void btnEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEkleActionPerformed
        // TODO add your handling code here:

        Date date = Calendar.getInstance().getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        

        
        if (!(txtBaslik.equals(""))) {
            int c = sqlf.notEkle(txtBaslik.getText(), txtAreaNot.getText(), sdf.format(date));
            if (c == 1) {
                JOptionPane.showMessageDialog(this, "Not eklendi!", "Veritabanı İşlemi", JOptionPane.INFORMATION_MESSAGE);
                //txtBaslik.setText("");
                //txtAreaNot.setText("");
                notlariBaslat();
            } else {
                JOptionPane.showMessageDialog(this, "Not eklenemedi!", "Veritabanı İşlemi", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnEkleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotDefteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotDefteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotDefteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotDefteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotDefteri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEkle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTarih;
    private javax.swing.JList listBaslik;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JTextArea txtAreaNot;
    private javax.swing.JTextField txtBaslik;
    // End of variables declaration//GEN-END:variables

}
